#pragma once

#include "mzIdentML110.Generated.ExternalDataType.h"
#include <string>
#include <vector>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace mzIdentML110 { namespace Generated { class ParamType; } }
namespace mzIdentML110 { namespace Generated { class CVParamType; } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


// 
// This source code was auto-generated by xsd, Version=4.7.2046.0.
// 

namespace mzIdentML110 {
    namespace Generated {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.2046.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://psidev.info/psi/pi/mzIdentML/1.1")] public partial class SearchDatabaseType: ExternalDataType
        class SearchDatabaseType : public ExternalDataType {

        private:
            ParamType *databaseNameField;

            std::vector<CVParamType*> cvParamField;

            std::wstring versionField;

            DateTime releaseDateField;

            bool releaseDateFieldSpecified = false;

            long long numDatabaseSequencesField = 0;

            bool numDatabaseSequencesFieldSpecified = false;

            long long numResiduesField = 0;

            bool numResiduesFieldSpecified = false;

            /// <remarks/>
        public:
            virtual ~SearchDatabaseType() {
                delete databaseNameField;
            }

            ParamType *getDatabaseName() const;
            void setDatabaseName(ParamType *value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("cvParam")] public CVParamType[] cvParam
            std::vector<CVParamType*> getcvParam() const;
            void setcvParam(const std::vector<CVParamType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string version
            std::wstring getversion() const;
            void setversion(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public System.DateTime releaseDate
            DateTime getreleaseDate() const;
            void setreleaseDate(DateTime value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool releaseDateSpecified
            bool getreleaseDateSpecified() const;
            void setreleaseDateSpecified(bool value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public long numDatabaseSequences
            long long getnumDatabaseSequences() const;
            void setnumDatabaseSequences(long long value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool numDatabaseSequencesSpecified
            bool getnumDatabaseSequencesSpecified() const;
            void setnumDatabaseSequencesSpecified(bool value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public long numResidues
            long long getnumResidues() const;
            void setnumResidues(long long value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool numResiduesSpecified
            bool getnumResiduesSpecified() const;
            void setnumResiduesSpecified(bool value);
        };
    }
}
