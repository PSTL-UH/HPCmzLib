#pragma once

#include <vector>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace mzIdentML110 { namespace Generated { class DBSequenceType; } }
namespace mzIdentML110 { namespace Generated { class PeptideType; } }
namespace mzIdentML110 { namespace Generated { class PeptideEvidenceType; } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


// 
// This source code was auto-generated by xsd, Version=4.7.2046.0.
// 

namespace mzIdentML110 {
    namespace Generated {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.2046.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://psidev.info/psi/pi/mzIdentML/1.1")] public partial class SequenceCollectionType
        class SequenceCollectionType {

        private:
            std::vector<DBSequenceType*> dBSequenceField;

            std::vector<PeptideType*> peptideField;

            std::vector<PeptideEvidenceType*> peptideEvidenceField;

            /// <remarks/>
        public:
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("DBSequence")] public DBSequenceType[] DBSequence
            std::vector<DBSequenceType*> getDBSequence() const;
            void setDBSequence(const std::vector<DBSequenceType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("Peptide")] public PeptideType[] Peptide
            std::vector<PeptideType*> getPeptide() const;
            void setPeptide(const std::vector<PeptideType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("PeptideEvidence")] public PeptideEvidenceType[] PeptideEvidence
            std::vector<PeptideEvidenceType*> getPeptideEvidence() const;
            void setPeptideEvidence(const std::vector<PeptideEvidenceType*> &value);
        };
    }
}
