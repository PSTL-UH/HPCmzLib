#pragma once

#include "IO.MzML.Generated.ParamGroupType.h"
#include <string>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace IO { namespace MzML { namespace Generated { class ScanWindowListType; } } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace IO {
    namespace MzML {
        namespace Generated {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psi.hupo.org/ms/mzml")] public partial class ScanType: ParamGroupType
        class ScanType : public ParamGroupType {

        private:
            ScanWindowListType *scanWindowListField;

            std::wstring spectrumRefField;

            std::wstring sourceFileRefField;

            std::wstring externalSpectrumIDField;

            std::wstring instrumentConfigurationRefField;

            /// <remarks/>
        public:
            virtual ~ScanType() {
                delete scanWindowListField;
            }

            ScanWindowListType *getscanWindowList() const;
            void setscanWindowList(ScanWindowListType *value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string spectrumRef
            std::wstring getspectrumRef() const;
            void setspectrumRef(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string sourceFileRef
            std::wstring getsourceFileRef() const;
            void setsourceFileRef(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string externalSpectrumID
            std::wstring getexternalSpectrumID() const;
            void setexternalSpectrumID(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string instrumentConfigurationRef
            std::wstring getinstrumentConfigurationRef() const;
            void setinstrumentConfigurationRef(const std::wstring &value);
        };
        }
    }
}
