#pragma once

#include "IO.MzML.Generated.ParamGroupType.h"
#include <string>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace IO { namespace MzML { namespace Generated { class ScanListType; } } }
namespace IO { namespace MzML { namespace Generated { class PrecursorListType; } } }
namespace IO { namespace MzML { namespace Generated { class ProductListType; } } }
namespace IO { namespace MzML { namespace Generated { class BinaryDataArrayListType; } } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace IO {
    namespace MzML {
        namespace Generated {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psi.hupo.org/ms/mzml")] public partial class SpectrumType: ParamGroupType
        class SpectrumType : public ParamGroupType {

        private:
            ScanListType *scanListField;

            PrecursorListType *precursorListField;

            ProductListType *productListField;

            BinaryDataArrayListType *binaryDataArrayListField;

            std::wstring idField;

            std::wstring spotIDField;

            std::wstring indexField;

            int defaultArrayLengthField = 0;

            std::wstring dataProcessingRefField;

            std::wstring sourceFileRefField;

            /// <remarks/>
        public:
            virtual ~SpectrumType() {
                delete scanListField;
                delete precursorListField;
                delete productListField;
                delete binaryDataArrayListField;
            }

            ScanListType *getscanList() const;
            void setscanList(ScanListType *value);

            /// <remarks/>
            PrecursorListType *getprecursorList() const;
            void setprecursorList(PrecursorListType *value);

            /// <remarks/>
            ProductListType *getproductList() const;
            void setproductList(ProductListType *value);

            /// <remarks/>
            BinaryDataArrayListType *getbinaryDataArrayList() const;
            void setbinaryDataArrayList(BinaryDataArrayListType *value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string id
            std::wstring getid() const;
            void setid(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string spotID
            std::wstring getspotID() const;
            void setspotID(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")] public string index
            std::wstring getindex() const;
            void setindex(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public int defaultArrayLength
            int getdefaultArrayLength() const;
            void setdefaultArrayLength(int value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string dataProcessingRef
            std::wstring getdataProcessingRef() const;
            void setdataProcessingRef(const std::wstring &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in native C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string sourceFileRef
            std::wstring getsourceFileRef() const;
            void setsourceFileRef(const std::wstring &value);
        };
        }
    }
}
