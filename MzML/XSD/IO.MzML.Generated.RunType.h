#pragma once

#include "IO.MzML.Generated.ParamGroupType.h"
#include <string>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace IO { namespace MzML { namespace Generated { class SpectrumListType; } } }
namespace IO { namespace MzML { namespace Generated { class ChromatogramListType; } } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace IO
{
    namespace MzML
    {
        namespace Generated
        {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psi.hupo.org/ms/mzml")] public partial class RunType: ParamGroupType
        class RunType : public ParamGroupType
        {

        private:
            SpectrumListType *spectrumListField;

            ChromatogramListType *chromatogramListField;

            std::string idField;

            std::string defaultInstrumentConfigurationRefField;

            std::string defaultSourceFileRefField;

            std::string sampleRefField;

            DateTime startTimeStampField;

            bool startTimeStampFieldSpecified = false;

            /// <remarks/>
        public:
            virtual ~RunType()
            {
                delete spectrumListField;
                delete chromatogramListField;
            }

            SpectrumListType *getspectrumList() const;
            void setspectrumList(SpectrumListType *value);

            /// <remarks/>
            ChromatogramListType *getchromatogramList() const;
            void setchromatogramList(ChromatogramListType *value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")] public string id
            std::string getid() const;
            void setid(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string defaultInstrumentConfigurationRef
            std::string getdefaultInstrumentConfigurationRef() const;
            void setdefaultInstrumentConfigurationRef(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string defaultSourceFileRef
            std::string getdefaultSourceFileRef() const;
            void setdefaultSourceFileRef(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType="IDREF")] public string sampleRef
            std::string getsampleRef() const;
            void setsampleRef(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public System.DateTime startTimeStamp
            DateTime getstartTimeStamp() const;
            void setstartTimeStamp(DateTime value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool startTimeStampSpecified
            bool getstartTimeStampSpecified() const;
            void setstartTimeStampSpecified(bool value);
        };
        }
    }
}
