#pragma once

#include "pepXML_v120.h"
#include <vector>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace pepXML { namespace Generated { class nameValueType; } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace pepXML
{
    namespace Generated
    {
        /// <remarks/>

            /// <remarks/>

            /// <remarks/>

            /// <remarks/>

            /// <remarks/>

            /// <remarks/>

            /// <remarks/>

        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.2046.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://regis-web.systemsbiology.net/pepXML")] public partial class peptideprophet_summaryMixture_modelMixturemodel_distributionNegmodel_distribution
        class peptideprophet_summaryMixture_modelMixturemodel_distributionNegmodel_distribution
        {

        private:
            std::vector<nameValueType*> parameterField;

            model_dis_type typeField = static_cast<model_dis_type>(0);

            bool typeFieldSpecified = false;

            /// <remarks/>
        public:
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("parameter")] public nameValueType[] parameter
            std::vector<nameValueType*> getparameter() const;
            void setparameter(const std::vector<nameValueType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public model_dis_type type
            model_dis_type gettype() const;
            void settype(model_dis_type value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool typeSpecified
            bool gettypeSpecified() const;
            void settypeSpecified(bool value);
        };
    }
}
