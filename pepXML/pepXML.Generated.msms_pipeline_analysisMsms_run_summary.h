#pragma once

#include <string>
#include <vector>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace pepXML { namespace Generated { class msms_pipeline_analysisMsms_run_summarySample_enzyme; } }
namespace pepXML { namespace Generated { class msms_pipeline_analysisMsms_run_summaryCross_linker; } }
namespace pepXML { namespace Generated { class msms_pipeline_analysisMsms_run_summarySearch_summary; } }
namespace pepXML { namespace Generated { class msms_pipeline_analysisMsms_run_summaryAnalysis_timestamp; } }
namespace pepXML { namespace Generated { class msms_pipeline_analysisMsms_run_summarySpectrum_query; } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace pepXML
{
    namespace Generated
    {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.2046.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://regis-web.systemsbiology.net/pepXML")] public partial class msms_pipeline_analysisMsms_run_summary
        class msms_pipeline_analysisMsms_run_summary
        {

        private:
            msms_pipeline_analysisMsms_run_summarySample_enzyme *sample_enzymeField;

            msms_pipeline_analysisMsms_run_summaryCross_linker *cross_linkerField;

            std::vector<msms_pipeline_analysisMsms_run_summarySearch_summary*> search_summaryField;

            std::vector<msms_pipeline_analysisMsms_run_summaryAnalysis_timestamp*> analysis_timestampField;

            std::vector<msms_pipeline_analysisMsms_run_summarySpectrum_query*> spectrum_queryField;

            std::string base_nameField;

            std::string raw_data_typeField;

            std::string raw_dataField;

            std::string msManufacturerField;

            std::string msModelField;

            std::string msIonizationField;

            std::string msMassAnalyzerField;

            std::string msDetectorField;

            /// <remarks/>
        public:
            virtual ~msms_pipeline_analysisMsms_run_summary()
            {
                delete sample_enzymeField;
                delete cross_linkerField;
            }

            msms_pipeline_analysisMsms_run_summarySample_enzyme *getsample_enzyme() const;
            void setsample_enzyme(msms_pipeline_analysisMsms_run_summarySample_enzyme *value);

            /// <remarks/>
            msms_pipeline_analysisMsms_run_summaryCross_linker *getcross_linker() const;
            void setcross_linker(msms_pipeline_analysisMsms_run_summaryCross_linker *value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("search_summary")] public msms_pipeline_analysisMsms_run_summarySearch_summary[] search_summary
            std::vector<msms_pipeline_analysisMsms_run_summarySearch_summary*> getsearch_summary() const;
            void setsearch_summary(const std::vector<msms_pipeline_analysisMsms_run_summarySearch_summary*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("analysis_timestamp")] public msms_pipeline_analysisMsms_run_summaryAnalysis_timestamp[] analysis_timestamp
            std::vector<msms_pipeline_analysisMsms_run_summaryAnalysis_timestamp*> getanalysis_timestamp() const;
            void setanalysis_timestamp(const std::vector<msms_pipeline_analysisMsms_run_summaryAnalysis_timestamp*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("spectrum_query")] public msms_pipeline_analysisMsms_run_summarySpectrum_query[] spectrum_query
            std::vector<msms_pipeline_analysisMsms_run_summarySpectrum_query*> getspectrum_query() const;
            void setspectrum_query(const std::vector<msms_pipeline_analysisMsms_run_summarySpectrum_query*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string base_name
            std::string getbase_name() const;
            void setbase_name(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string raw_data_type
            std::string getraw_data_type() const;
            void setraw_data_type(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string raw_data
            std::string getraw_data() const;
            void setraw_data(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string msManufacturer
            std::string getmsManufacturer() const;
            void setmsManufacturer(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string msModel
            std::string getmsModel() const;
            void setmsModel(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string msIonization
            std::string getmsIonization() const;
            void setmsIonization(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string msMassAnalyzer
            std::string getmsMassAnalyzer() const;
            void setmsMassAnalyzer(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string msDetector
            std::string getmsDetector() const;
            void setmsDetector(const std::string &value);
        };
    }
}
