#pragma once

#include <string>
#include <vector>

//C# TO C++ CONVERTER NOTE: Forward class declarations:
namespace pepXML { namespace Generated { class inputFileType; } }
namespace pepXML { namespace Generated { class rocErrorDataType; } }
namespace pepXML { namespace Generated { class mixtureModelType; } }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace pepXML
{
    namespace Generated
    {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.2046.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://regis-web.systemsbiology.net/pepXML")][System.Xml.Serialization.XmlRootAttribute(Namespace = "http://regis-web.systemsbiology.net/pepXML", IsNullable = false)] public partial class interprophet_summary
        class interprophet_summary
        {

        private:
            std::vector<inputFileType*> inputfileField;

            std::vector<rocErrorDataType*> roc_error_dataField;

            std::vector<mixtureModelType*> mixturemodelField;

            std::string versionField;

            std::string optionsField;

            float est_tot_num_correct_psmField = 0;

            bool est_tot_num_correct_psmFieldSpecified = false;

            float est_tot_num_correct_pepField = 0;

            bool est_tot_num_correct_pepFieldSpecified = false;

            /// <remarks/>
        public:
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("inputfile")] public inputFileType[] inputfile
            std::vector<inputFileType*> getinputfile() const;
            void setinputfile(const std::vector<inputFileType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("roc_error_data")] public rocErrorDataType[] roc_error_data
            std::vector<rocErrorDataType*> getroc_error_data() const;
            void setroc_error_data(const std::vector<rocErrorDataType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlElementAttribute("mixturemodel")] public mixtureModelType[] mixturemodel
            std::vector<mixtureModelType*> getmixturemodel() const;
            void setmixturemodel(const std::vector<mixtureModelType*> &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string version
            std::string getversion() const;
            void setversion(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string options
            std::string getoptions() const;
            void setoptions(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public float est_tot_num_correct_psm
            float getest_tot_num_correct_psm() const;
            void setest_tot_num_correct_psm(float value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool est_tot_num_correct_psmSpecified
            bool getest_tot_num_correct_psmSpecified() const;
            void setest_tot_num_correct_psmSpecified(bool value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public float est_tot_num_correct_pep
            float getest_tot_num_correct_pep() const;
            void setest_tot_num_correct_pep(float value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool est_tot_num_correct_pepSpecified
            bool getest_tot_num_correct_pepSpecified() const;
            void setest_tot_num_correct_pepSpecified(bool value);
        };
    }
}
