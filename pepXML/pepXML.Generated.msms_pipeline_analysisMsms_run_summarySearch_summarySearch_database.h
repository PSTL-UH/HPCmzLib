#pragma once

#include "pepXML_v120.h"
#include <string>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace pepXML
{
    namespace Generated
    {
        /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.2046.0")][System.SerializableAttribute()][System.Diagnostics.DebuggerStepThroughAttribute()][System.ComponentModel.DesignerCategoryAttribute("code")][System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://regis-web.systemsbiology.net/pepXML")] public partial class msms_pipeline_analysisMsms_run_summarySearch_summarySearch_database
        class msms_pipeline_analysisMsms_run_summarySearch_summarySearch_database
        {

        private:
            std::string local_pathField;

            std::string uRLField;

            std::string database_nameField;

            std::string orig_database_urlField;

            DateTime database_release_dateField;

            bool database_release_dateFieldSpecified = false;

            std::string database_release_identifierField;

            std::string size_in_db_entriesField;

            std::string size_of_residuesField;

            msms_pipeline_analysisMsms_run_summarySearch_summarySearch_databaseType typeField = static_cast<msms_pipeline_analysisMsms_run_summarySearch_summarySearch_databaseType>(0);

            /// <remarks/>
        public:
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string local_path
            std::string getlocal_path() const;
            void setlocal_path(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string URL
            std::string getURL() const;
            void setURL(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string database_name
            std::string getdatabase_name() const;
            void setdatabase_name(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string orig_database_url
            std::string getorig_database_url() const;
            void setorig_database_url(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public System.DateTime database_release_date
            DateTime getdatabase_release_date() const;
            void setdatabase_release_date(DateTime value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlIgnoreAttribute()] public bool database_release_dateSpecified
            bool getdatabase_release_dateSpecified() const;
            void setdatabase_release_dateSpecified(bool value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public string database_release_identifier
            std::string getdatabase_release_identifier() const;
            void setdatabase_release_identifier(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")] public string size_in_db_entries
            std::string getsize_in_db_entries() const;
            void setsize_in_db_entries(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")] public string size_of_residues
            std::string getsize_of_residues() const;
            void setsize_of_residues(const std::string &value);

            /// <remarks/>
//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
//ORIGINAL LINE: [System.Xml.Serialization.XmlAttributeAttribute()] public msms_pipeline_analysisMsms_run_summarySearch_summarySearch_databaseType type
            msms_pipeline_analysisMsms_run_summarySearch_summarySearch_databaseType gettype() const;
            void settype(msms_pipeline_analysisMsms_run_summarySearch_summarySearch_databaseType value);
        };
    }
}
